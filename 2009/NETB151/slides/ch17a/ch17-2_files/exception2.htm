<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>exeption2.htm</title>
<!-- Generated by SynEdit HTML exporter -->
</head>

<body bgcolor="#ffffff" text="#000000">
<pre><code><font face="Courier New" size="3"><font color="#008000">#include </font>&lt;iostream&gt;
<font color="#008000">#include </font>&lt;stdexcept&gt;
<b>using namespace </b>std;
 
<b>class </b>FutureValueError : <b>public </b>logic_error {
<b>public</b>:
   FutureValueError(<b>const char </b>reason[]);
};

FutureValueError::FutureValueError(<b>const char </b>reason[])
   : logic_error(reason){}

<b>double </b>future_value(<b>double </b>initial_balance, <b>double </b>p, <b>int </b>n)
{  <b>if </b>(p &lt; <font color="#800080">0 </font>|| n &lt; <font color="#800080">0</font>)
     <b>throw </b>FutureValueError(<font color="#ff0000">"illegal future_value parameter"</font>);
   <b>return </b>initial_balance * pow(<font color="#800080">1 </font>+ p / <font color="#800080">100</font>, n);
}

<b>void </b>read(<b>double</b>&amp; init, <b>double</b>&amp; interest, <b>int</b>&amp; years)
{  cout &lt;&lt; <font color="#ff0000">"Enter initial value, interest and years: "</font>;
   cin &gt;&gt; init &gt;&gt; interest &gt;&gt; years;
   <b>if </b>(years &gt; <font color="#800080">100</font>) <b>throw </b>logic_error(<font color="#ff0000">"too many years!"</font>);
   cout &lt;&lt; init &lt;&lt; <font color="#ff0000">" " </font>&lt;&lt; interest &lt;&lt; <font color="#ff0000">" " </font>&lt;&lt; years &lt;&lt; endl;
}

<b>int </b>main()
{  <b>bool </b>more = <b>true</b>;
   <b>while </b>(more)
    {  <b>double </b>init, interest;
       <b>int </b>years;
       <b>try
       </b>{  read(init, interest, years);
          <b>double </b>fvalue = future_value(init, interest, years); 
          cout &lt;&lt; <font color="#ff0000">"The future value is " </font>&lt;&lt; fvalue &lt;&lt; endl;  
       }
       <font color="#000080"><i>/**/
       </i></font><b>catch </b>(FutureValueError&amp; e)
       {  cout &lt;&lt; <font color="#ff0000">"A FutureValueError has occurred: "
               </font>&lt;&lt; e.what() &lt;&lt; <font color="#ff0000">"\n"</font>;
       } 
       <font color="#000080"><i>/**/      
       </i></font><b>catch </b>(logic_error&amp; e)
       {  cout &lt;&lt; <font color="#ff0000">"A logic error has occurred: "
               </font>&lt;&lt; e.what() &lt;&lt; <font color="#ff0000">"\n"</font>;
       }       
       cout &lt;&lt; <font color="#ff0000">"Retry? (y/n)"</font>;
       <b>char </b>input;
       cin &gt;&gt; input;
       <b>if </b>(input == 'n') more = <b>false</b>;
    } 
<font color="#000080"><i>//    char ch; cin &gt;&gt; ch;
    </i></font><b>return </b><font color="#800080">0</font>;
 }

</font>
</code></pre>
</body>
</html>
