{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f11\fmodern\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar \f4 \snext0 Normal;}{\s1\sb440\sa60\nowidctlpar \b\f5\fs34 \sbasedon0\snext0 heading 1;}{\s2\sb440\sa60\nowidctlpar \b\f5\fs28 \sbasedon0\snext0 
heading 2;}{\s3\sb440\sa60\nowidctlpar \b\f5 \sbasedon0\snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\s15\fi-431\li720\nowidctlpar \f4 \snext15 Dashed List;}{\s16\fi-431\li720\nowidctlpar \f4 \snext16 Box List;}{\s17\nowidctlpar\tx1584 
\f4 \sbasedon31\snext0 Section Heading;}{\s18\nowidctlpar\tx431 \f4 \sbasedon2\snext0 Numbered Heading 2;}{\s19\nowidctlpar \f11 \sbasedon0\snext19 Plain Text;}{\s20\fi-431\li720\nowidctlpar \f4 \snext20 Implies List;}{\s21\fi-431\li720\nowidctlpar \f4 
\sbasedon29\snext21 Upper Case List;}{\s22\fi-431\li720\nowidctlpar \f4 \snext22 Hand List;}{\s23\fi-431\li720\nowidctlpar \f4 \sbasedon29\snext23 Upper Roman List;}{\s24\li1440\ri1440\sa120\nowidctlpar \f4 \sbasedon0\snext24 Block Text;}{
\s25\fi-431\li720\nowidctlpar \f4 \sbasedon0\snext25 Lower Roman List;}{\s26\fi-431\li720\nowidctlpar \f4 \snext26 Heart List;}{\s27\fi-431\li720\nowidctlpar \f4 \sbasedon29\snext27 Lower Case List;}{\s28\fi-431\li720\nowidctlpar \f4 \snext28 Tick List;}{
\s29\fi-431\li720\nowidctlpar \f4 \snext29 Numbered List;}{\s30\fi-431\li720\nowidctlpar \f4 \snext30 Star List;}{\s31\nowidctlpar\tx431 \f4 \sbasedon1\snext0 Numbered Heading 1;}{\s32\fi-431\li720\nowidctlpar \f4 \snext32 Diamond List;}{
\s33\nowidctlpar\tx431 \f4 \sbasedon3\snext0 Numbered Heading 3;}{\s34\nowidctlpar\tx1584 \f4 \sbasedon31\snext0 Chapter Heading;}{\s35\fi-431\li720\nowidctlpar \f4 \snext35 Square List;}{\s36\fi-431\li720\nowidctlpar \f4 \snext36 Triangle List;}{
\s37\fi-431\li720\nowidctlpar \f4 \snext37 Bullet List;}}{\info{\author Nikolay Kirov}{\operator Nikolay Kirov}{\creatim\yr2004\mo3\dy29\hr14\min39}{\revtim\yr2004\mo3\dy29\hr14\min41}{\version3}{\edmins2}{\nofpages1}{\nofwords230}{\nofchars1311}
{\*\company IMI}{\vern57431}}\margl1134\margr1134\margt1134\margb1134 \widowctrl\ftnbj\aenddoc\hyphcaps0 \fet0\sectd \sbknone\linex0\colsx360 {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\qc\nowidctlpar \f4 {\b\fs28 Second International  Programming Contest}
\par \pard \qc\sl360\slmult1\nowidctlpar {\b\fs28 March 28, 2004, Blagoevgrad, Bulgaria}
\par \pard \qc\sl360\slmult1\keepn\nowidctlpar {\b\fs32 Problem B}
\par \pard \qc\sl360\slmult1\nowidctlpar {\b\fs32 The 8}{\b\fs32\super 8}{\b\fs32  Queens problem}
\par \pard \qj\nowidctlpar {\f5\fs20 
The 8 Queens problem is well known and often used to demonstrate different programming techniques. It was first analyzed in 1850 by Gauss, who defined it as trying to situate eight queens on a standard chessboard 8x8 in a way so that no one threatens anot
her one, as defined by the rules of chess.}
\par 
\par {\f5\fs20 Here we will consider a slight deviation from the original problem: the \ldblquote 8}{\f5\fs20\super 8}{\f5\fs20  Queens problem\rdblquote . The rules are the same as in the original one, except that the board is much bigger: up to 8}{
\f5\fs20\super 8 }{\f5\fs20 x8}{\f5\fs20\super 8}{\f5\fs20 . }
\par 
\par {\f5\fs20 Your task will be to implement an algorithm that can solve the problem for any board of size up to 8}{\f5\fs20\super 8}{\f5\fs20 . However, to check the correctness we will only want to make sure your implementation works for }{\i\f5\fs20 N < }{
\f5\fs20 10000. If so, we will assume the algorithm should in principle be practical on bigger boards as well. }
\par 
\par {\f5\fs20 Given a square board of size }{\i\f5\fs20 NxN}{\f5\fs20  (5 }{\i\f5\fs20 N}{\f5\fs20  < 10000) the goal is to put }{\i\f5\fs20 N}{\f5\fs20  queens so that there are no two ones on the same horizontal, vertical or diagonal. A sample solution for 
}{\i\f5\fs20 N}{\f5\fs20  = 8 is shown on the picture below.}
\par \pard \qc\nowidctlpar 
\par .....
\par \pard \nowidctlpar 
\par {\b\f5 Input}
\par \pard \qj\nowidctlpar {\f5\fs20 The first line contains the number of tests. Each test is described by a single line: the number }{\i\f5\fs20 N}{\f5\fs20 . }
\par \pard \nowidctlpar 
\par {\b\f5 Output}
\par \pard \qj\nowidctlpar {\f5\fs20 For each test case you should output exactly one line. If there is no solution it should say \ldblquote NO SOLUTION\rdblquote . Otherwise, the line should contain }{\i\f5\fs20 N}{\f5\fs20  integers }{\i\f5\fs20 R}{
\f5\fs20\sub 1}{\f5\fs20  }{\i\f5\fs20 R}{\f5\fs20\sub 2 }{\f5\fs20 \'85 }{\i\f5\fs20 R}{\i\f5\fs20\sub N}{\f5\fs20  separated by a single space, where }{\i\f5\fs20 R}{\i\f5\fs20\sub i}{\f5\fs20  is the column number of the queen in row }{\i\f5\fs20 i}{
\f5\fs20  (1 <= }{\i\f5\fs20 i <=}{\f5\fs20  }{\i\f5\fs20 N}{\f5\fs20 ). }
\par \pard \nowidctlpar 
\par {\b\f5 Example}
\par 
\par {\b\i\f5\fs20 Sample Input file  }
\par {\f11 2}
\par {\f11 5}
\par {\f11 8}
\par 
\par {\b\i\f5\fs20 Sample Output file}
\par {\f11\lang1031 1 3 5 2 4}
\par {\f11\lang1031 2 7 3 6 8 5 1 4 }
\par 
\par }