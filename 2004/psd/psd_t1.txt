Отбележете верните твърдения за вектори и масиви.
+ Векторът представлява множество от данни от един и същи тип.
- При създаване на вектор е задължително да се зададе броя на елементите му.


Даден е масив и инициализация на елементите му.
   double a[2] = {0.25, 1.75};
Отбележете операторите, където правилно е използван масивът a.
- int k = a.size();
+ cout << a[1]*a[0];


Даден е масив от символи:
   char cara[10] = "012345";
Отбележете операторите, след изпълнението на които
cara ще съдържа низ от 5 символа (без да се брои символа за край на низ).
+ cara = "abcde";
- cara[5]=1;


Дадени са масивите a1 и a2.
    const int DD=10;
    int a1[DD], a2[DD][DD];
На всички елементи и на двата масива е зададена стойност 0.
Отбележете верните оператори (относно синтаксис и граници на индексите).
+ a1[5]=a2[0][0];
- a1[0]=a1[9]*a2[9];


Отбележете верните твърдения за потоци и работа с файлове.
+ Операторът ifstream ind; дефинира файлова променлива за вход.
- С iofstream io; се дефинира файлова променлива за вход и изход.


Отбележете верните оператори за деклариране на функции
с параметри масиви.
+ int f(int a[10], int n);
- bool f(int a[][], int &n);


Дадени са векторът v и масивите m1 и m2.
    const int DIM=10;
    vector<int> v(DIM);
    int m1[DIM], m2[DIM][DIM];
Отбележете верните оператори (относно синтаксис и граници на индексите).
Размерността на вектора v не е променяна до зададения оператор.
+ m1[5]=m2[0][0];
- m1.push_back(0);


Отбележете верните твърдения за класове.
- Класът представлява множество от данни от един и същи тип.
+ Конструктор без параметри се нарича конструктор по подразбиране.


Отбележете верните декларации на функции, които могат да
бъдат конструктори на класове.
+ Point(double x, double y);
- int Boss(const int n, int m);


Даден е класът
    class Product    {
    public:
       Product();
       Product(string n, double p, int s);
       void read();
       string get_name() const;
       double get_price() const;
       void print() const;
    private:
       string name;
       double price;
       int score;    };
и обект от този клас p, дефиниран в main.
Отбележете операторите, които могат да се срещат в блока на
функцията main.
+ Product q;
- cout << p.name;


Даден е клас Big и обект b.
  class Big {
  public:
   Big();
   vector<Time> get_t() const { return times; }
   void set_t(Time t, int i) { times[i] = t; }
  private:
   vector<Time> times;
  };
  Big b;
Конструкторът на класа зарежда 10 стойности на вектора times.
Отбележете верните оператори от блока на main.

+ cout << b.get_t()[0].get_hours();
- b.get_t().pop_back();


Дадени са файловите променливи:
    ifstream fin;
    ofstream fout;
    fstream f;
и променливите:
    int k = 10;
    double x = 15.5;
    char ch = 'N';
    string s = "alabala";
Отбележете верните оператори с използване на файлови променливи.
- fin << fout;
+ fout << x << " " << s;
