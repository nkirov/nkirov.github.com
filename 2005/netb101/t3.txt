                          The questions of Test 3
       with two possible answers - one correct (yes) and one incorrect (no)

We have a class:
class Prod {
public:
   Prod();
   Prod(string n, int s);
   void read();
   string get_name() const;
   void print() const;
private:
   string name;
   int sc;
};
and an object p of this class, constructed in the main function. Mark the
correct and incorrect statements in the body of main function.
(yes) Prod q;
(no) cout << p.name;


Mark with "yes" the statements which present infinite loops.
The integer variable oh has a random value.
(no) while (false) {oh++;}
(yes) do oh--; while (true);

Mark with "yes" the statements in which the loop body executes exactly
once. An integer variable get has value 0.
(yes) do get++; while (false);
(no) do get++; while (get == 1);

We have the following function declaration:
    int were(int me, int &you);
Mark the correct and incorrect statements. We suppose that an integer
variable \verb|is| is defined and initialized with \verb|0.|
(yes) cout << were(10, is);
(no) cout << were(0.5, is);

We have the following variable definitions:
   int first = 10;
   int second = 9;
   int third = 8;
Calculate the arithmetic expressions and mark with "yes" these, which have
values 9.
(yes) first / second
(no) first % second / 2

Mark the correct and incorrect statements about the class Employee
and an object merry of this class.
(yes) merry.set_salary(2000);
(no) Employee maya = set_salary(2000.00);

We have the following variable definitions:
    string num = "1234";
    string abc = "ABC";
Mark the syntax correct and incorrect statements.
(yes) cout << num.substr(0,2);
(no) cout << length(abc);

Mark the correct and incorrect assertions about vectors.
(yes) A vector is a collection of data items of the same type.
(no) Valid values for the index range are from 0 to the size of the vector.

We have a vector and values of its elements:
  vector<double> a(2);
  a[0] = 0.5;
  a[1] = 1.5;
Mark the correct and incorrect statements about syntax and logic.
(yes) int k = a.size();
(no) int size_a = size(a);

Mark the correct and incorrect declarations of a function quick.
(yes) int quick(vector<int> a);
(no) void quick(vector<double> &d(10));

Mark the syntax correct and incorrect loop statements. All variables
have int type and initial value 1.
(yes) for (t = -1; t < 4; t++) cout << t;
(no) for {y = 1; y < 10; y++} cout << h;

Mark the syntax correct and incorrect statements containing vectors.
The variable b has a type vector<int> and holds 10 elements.
(yes) vector<int> a(10);
(no) vector a(100);

Mark with "yes" the equivalent logical expressions (1) and (2).
(yes) (1) country == "USA" (2) not (country != "USA")
(no) (1) state == "AK" and state == "HI" (2) not (state == "HI")

We have: 
   double a, x;
   string s;
   bool flag1, flag2;
Is it possible to compute the following logical expressions
using lazy evaluations?
(yes) cin.fail() or (a < 0)
(no) not (x >= 0)