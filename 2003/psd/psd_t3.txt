Дадена е думата МАТЕМАТИКА. Отбележете съответствията
на срещащите се букви и крайни редици от 0 и 1, които
са оптимални кодове от алгоритъма на Хофман.

+ К-0001 И-0000 М-10 А-01 Т-11 Е-001
- К-111 И-110 М-10 А-01 Т-001 Е-100




Даден е двусвързан списък, състоящ се от 3 елемента.
Полето nt сочи към следващ елемент, а полето pv --
предишен елемент от списъка.
   struct Item { Item *nt, *pv; int k; };
   Item *h;
h е указател за началото на списъка.
Отбележете верните твърдения.

+ (h->nt)->nt е адресът на последния елемент от списъка.
- (h->nt)->nt е нулев адрес.




Даден е аритметичния израз a/(b+c)*d-e*f и
е представен като двоично дърво.
Дадени са метод за обхождане и редица от символи.
Отбележете случайте, когато редицата е част от
дадения вид обхождане на двоичното дърво.

+  длк: bc
-  дкл: ef





Дадени са следните дефиниции:
   double d=2.5;
   double *p_d1=&d, *p_d2=new double(0.5);
Отбележете верните оператори.

+ p_d1 = new double;
- *p_d2 = new d;





Дадени са числа в скоби, от които трябва да се получи търсещо дърво.
Отбележете случайте, когато числото извън скобите е максималното ниво
на връх в полученото търсещо дърво.

+ (5,2,6,1) 2
- (4,5,8,7) 1





Отбележете верните дефиниции и твърдения за структури от данни и свързани
списъци.

+ Листата на двоичните дървета нямат наследници.
- Двоичното дърво е линейна структура от данни.





Отбележете верните твърдения за операторите и работата на програмата,
дадена във файла list3.cpp на учебника.

+ Член-функциите на класа List имат достъп до частните членове на класа Link.
- Член-функциите на класа Link имат достъп до частните членове на класа List.





Дадени са масивите a1 и a2.
   const int DD=10;
   int a1[DD], a2[DD][DD];
Отбележете верните оператори (относно синтаксис и граници на индексите).

+ a1[5]=a2[0][0];
- a1.push_back(10);





Дадени са следните рекурсивни функции:
   int sum(int n)
   {
    if (n>0) return n+mp(n-2);
    else return 1;
   }
   int mp(int n)
   {
    if (n>0) return n*sum(n/2);
    else return 0;
   }
Отбележете верните твърдения.

+ mp(-1) е 0
- sum(0) е 0
