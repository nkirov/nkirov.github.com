
%% Верността на твърденията е според системата на Borland C++
%% Съобщенията Warning не се считат за грешки.


\eng{1}
Дадена е следната програма:

#include <iostream.h>
class Term {
public:
   Term(int ti=0, int i=1);
   int addTerm() { return temp+=inc; }
   int subTerm() { return temp-=inc; }
private:
   int temp;
   const int inc; };
Term::Term(int ti, int i):inc(i) {temp=ti;}
void main()
{ Term . . . ;
 cout<<t1.addTerm()*t2.subTerm()<<"\n"; }

Отбележете дефинициите, които трябва да се поставят на
мястото на ... така, че да се изведе числото 60.


\eng{2}
Дадени са следните декларации с присвояване на стойности:
 
int a1=1, a2=2, a3=3;
 
Отбележете изразите, които имат стойност 1.


\eng{3}
При кой израз, поставен на мястото на ...
програмата ще отпечати числото 10:

int k=10;
if (...) { cout << k << "\n"; }


\eng{4}
Дадена е следната дефиниция на функция:
 
int fvec()
{ int vec[]={0,10,0,30,0,50,0,70,0,90};
  int *pt_vec=vec;
  return int(...); }
 
Отбележете изразите, поставени на мястото на ..., при които функцията
връща стойност 0.


\eng{5}
Вярна ли е дадената дефиниция на прототип на функция, която
бъде конструктор на някой клас? Отбележете вариантите с
отговор ``да''.


\eng{6}
Вярна ли е дадената дефиниция на прототип на функция, която
бъде деструктор на някой клас? Отбележете вариантите (подточките) с
отговор ``да''.


\eng{7}
Дадена е следната дефиниция обекти от тип клас:

class Th {
        int x;
public:
        Th(int=0)  { x=0; }
	int getx() { return x; }
} t, *ptr_t=&t, &ref_t=t;
 
Отбележете правилните обръщения към функцията на класа getx.
