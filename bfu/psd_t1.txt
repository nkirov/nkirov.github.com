
Отбележете верните твърдения за класове.
- Класът представлява множество от данни от един и същи тип.
+ Конструктор без параметри се нарича конструктор по подразбиране.

Отбележете верните декларации на функции, които могат да
бъдат конструктори на класове.
+ Point(double x, double y);
+ Boss(const int n, const int m);

Даден е класът
   class Product    {
   public:
      Product();
      Product(string n, double p, int s);
      void read();
      string get_name() const;
      double get_price() const;
      void print() const;
   private:
      string name;
      double price;
      int score;    };
и обект от този клас p, дефиниран в main.
Отбележете операторите, които могат да се срещат в блока на функцията main.
+ Product one;
- Product leva("Me", 1000);

Отбележете верните твърдения за вектори и масиви.
+ Векторът представлява множество от данни от един и същи тип.
- Масивът е наредено множество от данни от различни типове.

Даден е вектор и стойности на елементите му.
   vector<double> a(2);
   a[0] = 0.5; a[1] = 1.5;
Отбележете операторите, където правилно е използван векторът a.
+ a.push_back(2.5);
- a.push_back();

Даден е низът:
     string cara(10) = "012345";
Отбележете операторите, след изпълнението на които cara
ще съдържа низ от 5 символа.
+ cara = "abcde";
- cara = "123456";

Отбележете верните твърдения за потоци и работа с файлове.
+ За работа с файлове трябва да се включи заглавният файл fstream.
- За работа с текстови потоци трябва да се включи заглавният файл iostream.

Дадени са елементите на масив и две естествени числа в скоби.
Отбележете случаите, когато двете числа са броя на сравненията и броя на
присвояванията, необходими да се сортира масива по метода на селекцията.
+ 0,1,0,1 (6,3)
- 0,1,0,1 (6,9)

Даден е клас Big и обект b.
class Big {
public:
   Big();
   vector<Time> get_t() const { return times; }
   void set_t(Time t, int i) { times[i] = t; }
private:
   vector<Time> times;
};
Big b;
Конструкторът на класа зарежда 10 стойности на вектора times.
Отбележете верните оператори от блока на main.
+ cout << b.get_t()[0].get_hours();
- b.get_t().pop_back();
