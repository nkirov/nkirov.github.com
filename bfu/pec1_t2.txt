
Отбележете верните твърдения.

+ Оперативната памет е по-бърза от външната памет.
- Машинните езици са независими от типа на процесора.



Отбележете правилните дефиниции на променливи.

+ int moda = 8
- total = count * 0.25



Отбележете верните оператори за присвояване,
ако са дадени следните дефиниции:
  int k, n = 2;
  double t, x = 1.0;,
  string s1, s2 = "sub";
  bool b1, b2 = true;

+ n = 6 - n;
- int m = n;



Отбележете верните аритметични изрази. Всички променливи
са от тип int.

+ u-4
- %u-3




Отбележете верните аритметични изрази. Всички променливи
са от тип double.

+ x1 + y2 / 11
- x % y + 3



Отбележете верните оператори за работа с класа Time и обекти
t1 и t2 от този клас.

+ Time t(10,10,10);
- t1.get_minutes(t2);



Дадени са следните декларации с присвояване на стойности:
  int a1 = 20;
  int a2 = 80;
  int k = 8;
Отбележете изразите, които имат стойност 9.

+ a2/(k-1)
- a1-k-5



Отбележете израз, който поставен на мястото на ... в блока:
  { int k = 15;
    if (...) cout << k << "\n"; }
ще се отпечата числото 15.

+ k==15
- k>15



Дадена е функцията:
int fun(int n)
   {
    if (n>12) return n;
    else return n+1;
   }
Отбележете случаите, когато ще се отпечата четно число.

+ cout << fun(40);
- cout << fun(21);




Отбележете логическите изрази, в които са възможни т.н.
отложени пресмятания.
Променливите a, x са от тип double,
променливата s -- от тип string и
променливите flag1, flag2 -- от тип bool.

+ cin.fail() or (b < 0)
- z >= 0



Отбележете еквивалентните логически изрази.

+ (country=="USA" and state!="AK") и not(country!="USA" or state=="AK")
- (country=="USA" and state!="HI") и not(country!="USA" and state=="HI")



Отбележете верните твърдения за функции.

+ Функциите могат да връщат само една стойност.
- Всяка функция приема параметри само от числени типове.



Дадени са следните дефиниции на графични обекти:
   Point p(3,2), q(3,3);
   Circle c(p, 1);
   Line l(p,q);
   Message m(p,"Hello!");
Отбележете верните оператори за работа с тези обекти и
с графичния прозорец.

+ double p = q.get_x();
- Point p0(1,1,1);
